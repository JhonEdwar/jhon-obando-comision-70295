paths:
  /api/users/register:
    post:
      tags:
        - Authentication
      summary: Registrar nuevo usuario
      description: Crea una nueva cuenta de usuario (buyer, business o admin)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '201':
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Datos inválidos o usuario ya existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/users/login:
    post:
      tags:
        - Authentication
      summary: Iniciar sesión
      description: Autentica al usuario y retorna token JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/users/logout:
    get:
      tags:
        - Authentication
      summary: Cerrar sesión
      description: Cierra la sesión del usuario actual
      security:
        - bearerAuth: []
        - cookieAuth: []
      responses:
        '200':
          description: Sesión cerrada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /api/users/current:
    get:
      tags:
        - Authentication
      summary: Obtener usuario actual
      description: Retorna información del usuario autenticado
      security:
        - bearerAuth: []
        - cookieAuth: []
      responses:
        '200':
          description: Información del usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/users/passwordReset:
    post:
      tags:
        - Authentication
      summary: Solicitar reset de contraseña
      description: Envía email con token para resetear contraseña
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "usuario@example.com"
      responses:
        '200':
          description: Email de reset enviado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /api/users/reset:
    post:
      tags:
        - Authentication
      summary: Resetear contraseña
      description: Cambia la contraseña usando el token de reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
      responses:
        '200':
          description: Contraseña actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
