paths:
  /api/products:
    get:
      tags:
        - Products
      summary: Obtener todos los productos
      description: Retorna lista de productos disponibles
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: page
          in: query
          description: Número de página
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Cantidad de productos por página
          schema:
            type: integer
            default: 10
        - name: category
          in: query
          description: Filtrar por categoría
          schema:
            type: string
      responses:
        '200':
          description: Lista de productos obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

    post:
      tags:
        - Products
      summary: Crear nuevo producto
      description: Crea un nuevo producto (solo business)
      security:
        - bearerAuth: []
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
      responses:
        '201':
          description: Producto creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '400':
          $ref: '#/components/responses/ValidationError'

  /api/products/{id}:
    get:
      tags:
        - Products
      summary: Obtener producto por ID
      description: Retorna un producto específico
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto
          schema:
            type: string
            example: "60f7b3b3b3b3b3b3b3b3b3b3"
      responses:
        '200':
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          $ref: '#/components/responses/NotFoundError'

    patch:
      tags:
        - Products
      summary: Actualizar producto
      description: Actualiza un producto existente (solo business)
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
      responses:
        '200':
          description: Producto actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

    delete:
      tags:
        - Products
      summary: Eliminar producto
      description: Elimina un producto (solo business)
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto
          schema:
            type: string
      responses:
        '200':
          description: Producto eliminado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
